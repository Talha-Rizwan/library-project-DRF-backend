from django.contrib.auth.models import AbstractUser
from django.db import models

class User(AbstractUser):
    """
    User Class inherited from in-built AbstractUser 
    Class from django.contrib.auth.models
    """
    full_name = models.CharField(max_length=255)
    phone = models.CharField(max_length=20, blank=True, null=True)
    gender_choices = (
        ('M', 'Male'),
        ('F', 'Female'),
        ('O', 'Other'),
    )
    gender = models.CharField(max_length=1, choices=gender_choices, blank=True, null=True)
    role_choices = (
        ('A', 'Admin'),
        ('L', 'Librarian'),
        ('C', 'Customer'),
    )
    role = models.CharField(max_length=1, choices=role_choices, null=False, default='C')
    issued_books = models.ManyToManyField('Book', blank=True, related_name='users')


    REQUIRED_FIELDS = []

    def __str__(self):
        return self.username

class Book(models.Model):
    '''Book Model to store all the books in the library'''
    name = models.CharField(max_length=50)
    author_name = models.CharField(max_length=50)
    publisher_name = models.CharField(max_length=50)
    number_of_books = models.PositiveIntegerField()
    
    #To-Do : Add the image field  

    def __str__(self):
        return self.name


class PendingRequest(models.Model):
    '''Requests class which contains all the requests generated by user and their statuses'''
    request_user = models.ForeignKey(User, on_delete=models.CASCADE, blank=True)
    requested_book = models.ForeignKey(Book, on_delete=models.CASCADE, blank=True)
    created = models.DateTimeField(auto_now_add=True)
    status_choices = (
        ('P', 'Pending'),
        ('A', 'Approved'),
        ('R', 'Rejected'),
        ('B', 'Back Return'),
        ('C', 'Closed')
    )
    status = models.CharField(max_length=1, choices=status_choices, null=False, default='P')

    def __str__(self):
        return f'Request from {self.request_user.full_name} for {self.requested_book.name} - {self.status}'